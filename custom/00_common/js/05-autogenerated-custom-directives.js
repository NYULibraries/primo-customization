// ****************************************
// 05-autogenerated-custom-directives.js
// ****************************************
//
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// SEE README.MD FOR INSTRUCTIONS ON HOW TO REGENERATE THIS FILE.

/* global app, console */

function generateAllPossibleCustomDirectives() {
    // ALMA-HOWOVP-AFTER
    app.component( 'almaHowovpAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'almaHowovpAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // ALMA-HTGI-BACK-BUTTON-AFTER
    app.component( 'almaHtgiBackButtonAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'almaHtgiBackButtonAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // ALMA-HTGI-SVC-AFTER
    app.component( 'almaHtgiSvcAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'almaHtgiSvcAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // ALMA-HTGI-TABS-AFTER
    app.component( 'almaHtgiTabsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'almaHtgiTabsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // HLS-VIDEO-AFTER
    app.component( 'hlsVideoAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'hlsVideoAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // NG-FORWARD-HACK-AFTER
    app.component( 'ngForwardHackAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'ngForwardHackAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PICKUP-ANYWHERE-FORM-AFTER
    app.component( 'pickupAnywhereFormAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'pickupAnywhereFormAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ACCOUNT-AFTER
    app.component( 'prmAccountAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAccountAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ACCOUNT-LINKS-AFTER
    app.component( 'prmAccountLinksAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAccountLinksAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ACCOUNT-OVERVIEW-AFTER
    app.component( 'prmAccountOverviewAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAccountOverviewAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ACTION-CONTAINER-AFTER
    app.component( 'prmActionContainerAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmActionContainerAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ACTION-LIST-AFTER
    app.component( 'prmActionListAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmActionListAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ADD-ALERT-TOAST-AFTER
    app.component( 'prmAddAlertToastAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAddAlertToastAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ADD-QUERY-TO-SAVED-SEARCHES-AFTER
    app.component( 'prmAddQueryToSavedSearchesAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAddQueryToSavedSearchesAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ADDITIONAL-SERVICES-AFTER
    app.component( 'prmAdditionalServicesAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAdditionalServicesAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ADVANCED-SEARCH-AFTER
    app.component( 'prmAdvancedSearchAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAdvancedSearchAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ALMA-MASHUP-AFTER
    app.component( 'prmAlmaMashupAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAlmaMashupAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ALMA-MORE-INST-AFTER
    app.component( 'prmAlmaMoreInstAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAlmaMoreInstAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ALMA-OTHER-MEMBERS-AFTER
    app.component( 'prmAlmaOtherMembersAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAlmaOtherMembersAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ALMA-OTHER-UNITS-AFTER
    app.component( 'prmAlmaOtherUnitsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAlmaOtherUnitsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ALMA-REPRESENTATIONS-FILTER-AFTER
    app.component( 'prmAlmaRepresentationsFilterAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAlmaRepresentationsFilterAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ALMA-VIEWER-AFTER
    app.component( 'prmAlmaViewerAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAlmaViewerAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ALMA-VIEWIT-AFTER
    app.component( 'prmAlmaViewitAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAlmaViewitAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ALMA-VIEWIT-ITEMS-AFTER
    app.component( 'prmAlmaViewitItemsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAlmaViewitItemsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ALPHABET-TOOLBAR-AFTER
    app.component( 'prmAlphabetToolbarAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAlphabetToolbarAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ATOZ-SEARCH-BAR-AFTER
    app.component( 'prmAtozSearchBarAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAtozSearchBarAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : `<search-bar-sub-menu>
    <div class="layout-align-end-center layout-row flex search-bar-sub-menu">
        <ul>
            <li>
                <a href="https://nyu.qualtrics.com/jfe/form/SV_blQ3OFOew9vl6Pb?Source=NYU" target="_blank"
                    tabindex="-1">
                    <button aria-label="Provide Feedback" class="button-with-icon zero-margin md-button md-small"
                        type="button">
                        <prm-icon style="z-index:1" icon-type="svg" svg-icon-set="communication"
                            icon-definition="ic_forum_24px"></prm-icon>
                        <span class="search-bar-sub-menu-item hide-xs">Provide Feedback</span>
                    </button>
                </a>
            </li>
            <li>
                <a href="https://guides.nyu.edu/library-hours" target="_blank" tabindex="-1">
                    <button aria-label="Library Hours" class="button-with-icon zero-margin md-button md-small"
                        type="button">
                        <prm-icon style="z-index:1" icon-type="svg" svg-icon-set="av"
                            icon-definition="ic_av_timer_24px"></prm-icon>
                        <span class="search-bar-sub-menu-item hide-xs">Library Hours</span>
                    </button>
                </a>
            </li>
        </ul>
    </div>
</search-bar-sub-menu>
`,
    } );

    // PRM-AUTHENTICATION-AFTER
    app.component( 'prmAuthenticationAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmAuthenticationAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-BACK-TO-LIBRARY-SEARCH-AFTER
    app.component( 'prmBackToLibrarySearchAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmBackToLibrarySearchAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-BACK-TO-LIBRARY-SEARCH-BUTTON-AFTER
    app.component( 'prmBackToLibrarySearchButtonAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmBackToLibrarySearchButtonAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-BACK-TO-SEARCH-RESULTS-BUTTON-AFTER
    app.component( 'prmBackToSearchResultsButtonAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmBackToSearchResultsButtonAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-BANNER-CARD-CONTENT-AFTER
    app.component( 'prmBannerCardContentAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmBannerCardContentAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-BARCODE-SEARCH-AFTER
    app.component( 'prmBarcodeSearchAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmBarcodeSearchAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-BLANK-ILL-AFTER
    app.component( 'prmBlankIllAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmBlankIllAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-BLANK-PURCHASE-REQUEST-AFTER
    app.component( 'prmBlankPurchaseRequestAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmBlankPurchaseRequestAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-BREADCRUMBS-AFTER
    app.component( 'prmBreadcrumbsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmBreadcrumbsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-BRIEF-RESULT-AFTER
    app.component( 'prmBriefResultAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmBriefResultAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : `<div ng-if="\$ctrl.getPnx().display.lds51.length > 0">
    <a href="{{\$ctrl.getPnx().display.lds51[0]}}" target="_blank" onclick="findingAidsLinkClickHandler( event )">
        Finding aid online
    </a>
</div>`,
    } );

    // PRM-BRIEF-RESULT-CONTAINER-AFTER
    app.component( 'prmBriefResultContainerAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmBriefResultContainerAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-BRIEF-RESULT-DELIVERY-OPTION-LINK-AFTER
    app.component( 'prmBriefResultDeliveryOptionLinkAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmBriefResultDeliveryOptionLinkAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-BRIEF-RESULT-DIGITAL-BEST-OFFER-AFTER
    app.component( 'prmBriefResultDigitalBestOfferAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmBriefResultDigitalBestOfferAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-BRIEF-RESULT-PHYSICAL-BEST-OFFER-AFTER
    app.component( 'prmBriefResultPhysicalBestOfferAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmBriefResultPhysicalBestOfferAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-BROWSE-RESULT-AFTER
    app.component( 'prmBrowseResultAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmBrowseResultAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-BROWSE-SEARCH-AFTER
    app.component( 'prmBrowseSearchAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmBrowseSearchAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-BROWSE-SEARCH-BAR-AFTER
    app.component( 'prmBrowseSearchBarAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmBrowseSearchBarAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : `<search-bar-sub-menu>
    <div class="layout-align-end-center layout-row flex search-bar-sub-menu">
        <ul>
            <li>
                <a href="https://nyu.qualtrics.com/jfe/form/SV_blQ3OFOew9vl6Pb?Source=NYU" target="_blank"
                    tabindex="-1">
                    <button aria-label="Provide Feedback" class="button-with-icon zero-margin md-button md-small"
                        type="button">
                        <prm-icon style="z-index:1" icon-type="svg" svg-icon-set="communication"
                            icon-definition="ic_forum_24px"></prm-icon>
                        <span class="search-bar-sub-menu-item hide-xs">Provide Feedback</span>
                    </button>
                </a>
            </li>
            <li>
                <a href="https://guides.nyu.edu/library-hours" target="_blank" tabindex="-1">
                    <button aria-label="Library Hours" class="button-with-icon zero-margin md-button md-small"
                        type="button">
                        <prm-icon style="z-index:1" icon-type="svg" svg-icon-set="av"
                            icon-definition="ic_av_timer_24px"></prm-icon>
                        <span class="search-bar-sub-menu-item hide-xs">Library Hours</span>
                    </button>
                </a>
            </li>
        </ul>
    </div>
</search-bar-sub-menu>
`,
    } );

    // PRM-CHAPTERS-AND-REVIEWS-ITEM-AFTER
    app.component( 'prmChaptersAndReviewsItemAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmChaptersAndReviewsItemAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-CHAPTERS-AND-REVIEWS-AFTER
    app.component( 'prmChaptersAndReviewsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmChaptersAndReviewsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-CHAPTERS-RESULTS-LINE-AFTER
    app.component( 'prmChaptersResultsLineAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmChaptersResultsLineAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-CITATION-AFTER
    app.component( 'prmCitationAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCitationAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-CITATION-LINKER-AFTER
    app.component( 'prmCitationLinkerAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCitationLinkerAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-CITATION-TRAILS-BREADCRUMBS-AFTER
    app.component( 'prmCitationTrailsBreadcrumbsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCitationTrailsBreadcrumbsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-CITATION-TRAILS-FULLVIEW-LINK-AFTER
    app.component( 'prmCitationTrailsFullviewLinkAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCitationTrailsFullviewLinkAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-CITATION-TRAILS-INDICATION-AFTER
    app.component( 'prmCitationTrailsIndicationAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCitationTrailsIndicationAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-CITATION-TRAILS-INDICATION-CONTAINER-AFTER
    app.component( 'prmCitationTrailsIndicationContainerAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCitationTrailsIndicationContainerAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-CITATION-TRAILS-ITEM-AFTER
    app.component( 'prmCitationTrailsItemAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCitationTrailsItemAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-COLLECTION-AFTER
    app.component( 'prmCollectionAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCollectionAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-COLLECTION-BREADCRUMBS-AFTER
    app.component( 'prmCollectionBreadcrumbsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCollectionBreadcrumbsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-COLLECTION-DISCOVERY-AFTER
    app.component( 'prmCollectionDiscoveryAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCollectionDiscoveryAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-COLLECTION-DISCOVERY-VIEW-SWITCHER-AFTER
    app.component( 'prmCollectionDiscoveryViewSwitcherAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCollectionDiscoveryViewSwitcherAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-COLLECTION-GALLERY-AFTER
    app.component( 'prmCollectionGalleryAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCollectionGalleryAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-COLLECTION-GALLERY-HEADER-AFTER
    app.component( 'prmCollectionGalleryHeaderAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCollectionGalleryHeaderAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-COLLECTION-NAVIGATION-BREADCRUMBS-AFTER
    app.component( 'prmCollectionNavigationBreadcrumbsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCollectionNavigationBreadcrumbsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-COLLECTION-NAVIGATION-BREADCRUMBS-ITEM-AFTER
    app.component( 'prmCollectionNavigationBreadcrumbsItemAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCollectionNavigationBreadcrumbsItemAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-COLLECTION-SEARCH-AFTER
    app.component( 'prmCollectionSearchAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCollectionSearchAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-CONTROLLED-VOCABULARY-AFTER
    app.component( 'prmControlledVocabularyAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmControlledVocabularyAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-COPY-CLIPBOARD-BTN-AFTER
    app.component( 'prmCopyClipboardBtnAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCopyClipboardBtnAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-COPYRIGHTS-AFTER
    app.component( 'prmCopyrightsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmCopyrightsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-DATABASES-AFTER
    app.component( 'prmDatabasesAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmDatabasesAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-DATABASES-CATEGORIZE-AFTER
    app.component( 'prmDatabasesCategorizeAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmDatabasesCategorizeAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-DATABASES-FULL-VIEW-AFTER
    app.component( 'prmDatabasesFullViewAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmDatabasesFullViewAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-DATABASES-RESULTS-AFTER
    app.component( 'prmDatabasesResultsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmDatabasesResultsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-DELIVERY-REGISTRATION-AFTER
    app.component( 'prmDeliveryRegistrationAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmDeliveryRegistrationAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-DELIVERY-SESSION-EXPIRY-NOTIFICATION-AFTER
    app.component( 'prmDeliverySessionExpiryNotificationAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmDeliverySessionExpiryNotificationAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-DENIED-ACCESS-AFTER
    app.component( 'prmDeniedAccessAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmDeniedAccessAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-DEPOSITS-AFTER
    app.component( 'prmDepositsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmDepositsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-DEPOSITS-LINK-AFTER
    app.component( 'prmDepositsLinkAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmDepositsLinkAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-DEPOSITS-OVERVIEW-AFTER
    app.component( 'prmDepositsOverviewAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmDepositsOverviewAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-DID-U-MEAN-AFTER
    app.component( 'prmDidUMeanAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmDidUMeanAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-EASYBIB-AFTER
    app.component( 'prmEasybibAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmEasybibAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-EDIT-NOTIFICATION-SETTINGS-AFTER
    app.component( 'prmEditNotificationSettingsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmEditNotificationSettingsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ENDNOTE-AFTER
    app.component( 'prmEndnoteAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmEndnoteAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-EXPLORE-FOOTER-AFTER
    app.component( 'prmExploreFooterAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmExploreFooterAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-EXPLORE-MAIN-AFTER
    app.component( 'prmExploreMainAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmExploreMainAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-EXPORT-BIBTEX-AFTER
    app.component( 'prmExportBibtexAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmExportBibtexAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-EXPORT-EXCEL-AFTER
    app.component( 'prmExportExcelAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmExportExcelAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-EXPORT-RIS-AFTER
    app.component( 'prmExportRisAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmExportRisAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-FACET-AFTER
    app.component( 'prmFacetAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmFacetAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-FACET-EXACT-AFTER
    app.component( 'prmFacetExactAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmFacetExactAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-FACET-RANGE-AFTER
    app.component( 'prmFacetRangeAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmFacetRangeAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-FAVORITES-AFTER
    app.component( 'prmFavoritesAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmFavoritesAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-FAVORITES-EDIT-LABELS-MENU-AFTER
    app.component( 'prmFavoritesEditLabelsMenuAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmFavoritesEditLabelsMenuAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-FAVORITES-LABELS-AFTER
    app.component( 'prmFavoritesLabelsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmFavoritesLabelsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-FAVORITES-RECORD-LABELS-AFTER
    app.component( 'prmFavoritesRecordLabelsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmFavoritesRecordLabelsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-FAVORITES-TOOL-BAR-AFTER
    app.component( 'prmFavoritesToolBarAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmFavoritesToolBarAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-FAVORITES-WARNING-MESSAGE-AFTER
    app.component( 'prmFavoritesWarningMessageAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmFavoritesWarningMessageAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-FEATURED-RESULT-ITEM-AFTER
    app.component( 'prmFeaturedResultItemAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmFeaturedResultItemAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-FEATURED-RESULTS-AFTER
    app.component( 'prmFeaturedResultsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmFeaturedResultsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-FINES-AFTER
    app.component( 'prmFinesAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmFinesAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : `<h2>Paying Fines</h2>
<h3>Bobst Items</h3>
<p>Payments for Bobst, Bobst Offsite, or Bobst Reserve materials can be made:</p>
<ul>
    <li>Over the phone by calling (212)-998-2530</li>
    <li>At the Bobst Circulation Desk during regular service hours</li>
    <li>By appointment made on our <a href="https://calendly.com/bobst-access/fine-consultation" target="_blank">reservation system</a></li>
</ul>
<p>For any questions, call us at (212)-998-2530 or email us at <a href="mailto:lib-circulation@nyu.edu">lib-circulation@nyu.edu </a></p>
<h3>Non-Bobst Items </h3>
<p>For all other charges, please contact the appropriate library from the list below: </p>
<ul>
    <li>NYU Avery Fisher Center for Music and Media, (212)-998-2585, <a href="mailto:afc-admin-group@nyu.edu">afc-admin-group@nyu.edu </a></li>
    <li>NYU Courant Institute Library, (212)-998-3315, <a href="mailto:courantlibrary@nyu.edu">courantlibrary@nyu.edu </a></li>
    <li>NYU Jack Brause Library, (212)-992-3627, <a href="mailto:midtown.library@nyu.edu">midtown.library@nyu.edu </a></li>
    <li>NYU Institute of Fine Arts Library, (212)-992-5825, <a href="mailto:ifa.library@nyu.edu">ifa.library@nyu.edu</a></li>
    <li>NYU Health Sciences Library, (212)-263-7238, <a href="mailto:dds@med.nyu.edu">dds@med.nyu.edu</a></li>
    <li>NYU Bern Dibner Library of Science and Technology, (646)-997-3530, <a href="mailto:dibner.access@nyu.edu">dibner.access@nyu.edu</a></li>
    <li>NYU Abu Dhabi Library, <a href="mailto:lib-nyuad-circ@nyu.edu">lib-nyuad-circ@nyu.edu</a></li>
    <li>NYU Shanghai Library, <a href="mailto:shanghai.circulation@nyu.edu">shanghai.circulation@nyu.edu</a></li>
    <li>The New School Libraries, (212)-229-5307, <a href="mailto:librarycirc@newschool.edu">librarycirc@newschool.edu</a></li>
    <li>Cooper Union Library, (212)-353-4188, <a href="mailto:circulation@cooper.edu">circulation@cooper.edu</a></li>
    <li>New York School of Interior Design Library, (212)-472-1500 x214, <a href="mailto:libraryinfo@nysid.edu">libraryinfo@nysid.edu</li>
</ul>

`,
    } );

    // PRM-FINES-OVERVIEW-AFTER
    app.component( 'prmFinesOverviewAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmFinesOverviewAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-FULL-VIEW-AFTER
    app.component( 'prmFullViewAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmFullViewAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-FULL-VIEW-CONT-AFTER
    app.component( 'prmFullViewContAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmFullViewContAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-FULL-VIEW-PAGE-AFTER
    app.component( 'prmFullViewPageAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmFullViewPageAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-FULL-VIEW-SERVICE-CONTAINER-AFTER
    app.component( 'prmFullViewServiceContainerAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmFullViewServiceContainerAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-GALLERY-COLLECTION-AFTER
    app.component( 'prmGalleryCollectionAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmGalleryCollectionAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-GALLERY-COLLECTIONS-LIST-AFTER
    app.component( 'prmGalleryCollectionsListAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmGalleryCollectionsListAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-GALLERY-ITEM-AFTER
    app.component( 'prmGalleryItemAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmGalleryItemAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-GALLERY-ITEMS-LIST-AFTER
    app.component( 'prmGalleryItemsListAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmGalleryItemsListAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-GET-IT-REQUEST-AFTER
    app.component( 'prmGetItRequestAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmGetItRequestAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ICON-AFTER
    app.component( 'prmIconAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmIconAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ICP-LICENSE-FOOTER-AFTER
    app.component( 'prmIcpLicenseFooterAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmIcpLicenseFooterAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-JOURNALS-AFTER
    app.component( 'prmJournalsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmJournalsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-JOURNALS-FULL-VIEW-AFTER
    app.component( 'prmJournalsFullViewAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmJournalsFullViewAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LANGUAGE-SELECTION-AFTER
    app.component( 'prmLanguageSelectionAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLanguageSelectionAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LEGANTO-AFTER
    app.component( 'prmLegantoAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLegantoAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LEGANTO-GETIT-AFTER
    app.component( 'prmLegantoGetitAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLegantoGetitAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LIBRARIES-AROUND-BAR-AFTER
    app.component( 'prmLibrariesAroundBarAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLibrariesAroundBarAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LIBRARY-AFTER
    app.component( 'prmLibraryAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLibraryAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LIBRARY-CARD-MENU-AFTER
    app.component( 'prmLibraryCardMenuAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLibraryCardMenuAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LINKED-DATA-AFTER
    app.component( 'prmLinkedDataAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLinkedDataAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LINKED-DATA-CARD-AFTER
    app.component( 'prmLinkedDataCardAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLinkedDataCardAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LINKED-USER-SELECTOR-AFTER
    app.component( 'prmLinkedUserSelectorAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLinkedUserSelectorAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LOAN-AFTER
    app.component( 'prmLoanAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLoanAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LOANS-AFTER
    app.component( 'prmLoansAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLoansAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LOANS-OVERVIEW-AFTER
    app.component( 'prmLoansOverviewAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLoansOverviewAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LOCATION-AFTER
    app.component( 'prmLocationAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLocationAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LOCATION-HOLDINGS-AFTER
    app.component( 'prmLocationHoldingsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLocationHoldingsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LOCATION-ITEM-AFTER
    app.component( 'prmLocationItemAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLocationItemAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LOCATION-ITEMS-AFTER
    app.component( 'prmLocationItemsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLocationItemsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LOCATIONS-AFTER
    app.component( 'prmLocationsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLocationsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LOGIN-AFTER
    app.component( 'prmLoginAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLoginAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LOGIN-ALMA-MASHUP-AFTER
    app.component( 'prmLoginAlmaMashupAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLoginAlmaMashupAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LOGIN-HELP-AFTER
    app.component( 'prmLoginHelpAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLoginHelpAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LOGIN-IFRAME-AFTER
    app.component( 'prmLoginIframeAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLoginIframeAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LOGIN-ITEM-AFTER
    app.component( 'prmLoginItemAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLoginItemAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-LOGO-AFTER
    app.component( 'prmLogoAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmLogoAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-MAIN-MENU-AFTER
    app.component( 'prmMainMenuAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmMainMenuAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-MENDELEY-AFTER
    app.component( 'prmMendeleyAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmMendeleyAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-MENDELEY-TOAST-AFTER
    app.component( 'prmMendeleyToastAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmMendeleyToastAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-MESSAGES-AND-BLOCKS-AFTER
    app.component( 'prmMessagesAndBlocksAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmMessagesAndBlocksAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-MESSAGES-AND-BLOCKS-OVERVIEW-AFTER
    app.component( 'prmMessagesAndBlocksOverviewAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmMessagesAndBlocksOverviewAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-MORE-LIKE-THIS-AFTER
    app.component( 'prmMoreLikeThisAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmMoreLikeThisAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-MORE-LIKE-THIS-ITEM-AFTER
    app.component( 'prmMoreLikeThisItemAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmMoreLikeThisItemAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-MORE-LIKE-THIS-ITEM-INFO-AFTER
    app.component( 'prmMoreLikeThisItemInfoAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmMoreLikeThisItemInfoAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-MULTI-SELECT-FILTER-AFTER
    app.component( 'prmMultiSelectFilterAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmMultiSelectFilterAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-NEWSPAPERS-FACET-AFTER
    app.component( 'prmNewspapersFacetAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmNewspapersFacetAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-NEWSPAPERS-FULL-VIEW-AFTER
    app.component( 'prmNewspapersFullViewAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmNewspapersFullViewAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-NEWSPAPERS-HOME-AFTER
    app.component( 'prmNewspapersHomeAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmNewspapersHomeAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-NEWSPAPERS-SEARCH-BAR-AFTER
    app.component( 'prmNewspapersSearchBarAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmNewspapersSearchBarAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-NEWSPAPERS-SPOTLIGHT-AFTER
    app.component( 'prmNewspapersSpotlightAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmNewspapersSpotlightAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-NGRS-BRIEF-RESULT-LINE-AFTER
    app.component( 'prmNgrsBriefResultLineAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmNgrsBriefResultLineAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-NGRS-RESULTS-BUTTON-AFTER
    app.component( 'prmNgrsResultsButtonAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmNgrsResultsButtonAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-NO-SEARCH-RESULT-AFTER
    app.component( 'prmNoSearchResultAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmNoSearchResultAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : `<md-card
        class="default-card zero-margin _md md-primoExplore-theme primo-explore-custom-no-search-results"
        data-cy="no-search-results">
    <md-card-title>
        <md-card-title-text>
            <h2 class="md-headline">
                No records found
            </h2>
        </md-card-title-text>
    </md-card-title>
    <md-card-content>
        <p>
            <span>There are no results matching your search "{{ \$ctrl.parentCtrl.term }}".</span>
            We recommend trying one or more of the options below:
        </p>
        <h3>Resources</h3>
        <ul data-cy="no-results-more-info">
            <li>
                <a ng-href="https://ezborrow.reshare.indexdata.com/Search/Results?lookfor={{ \$ctrl.parentCtrl.term | encodeURIComponent }}"
                   class="md-primoExplore-theme"
                   href="https://ezborrow.reshare.indexdata.com/Search/Results?lookfor={{ \$ctrl.parentCtrl.term | encodeURIComponent }}">
                    Request a book from E-ZBorrow (NYU only)
                </a>
            </li>
            <li>
                <a ng-href="http://www.worldcat.org/search?qt=worldcat_org_all&amp;q={{ \$ctrl.parentCtrl.term | encodeURIComponent }}"
                   class="md-primoExplore-theme"
                   href="http://www.worldcat.org/search?qt=worldcat_org_all&amp;q={{ \$ctrl.parentCtrl.term | encodeURIComponent }}">
                    Search WorldCat for items in nearby
                    libraries
                </a>
            </li>
            <li>
                <a href="http://library.nyu.edu/ask"
                   class="md-primoExplore-theme">Ask a
                    Librarian</a>
            </li>
        </ul>
        <h3>Suggestions</h3>
        <ul>
            <li>
                <span>Make sure that all words are spelled correctly.</span>
            </li>
            <li>
                <span>Try different keywords or fewer keywords.</span>
            </li>
        </ul>
    </md-card-content>
</md-card>

`,
    } );

    // PRM-OFFER-DETAILS-TILE-AFTER
    app.component( 'prmOfferDetailsTileAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmOfferDetailsTileAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-OPAC-AFTER
    app.component( 'prmOpacAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmOpacAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : `<div class="custom-requests">
  <div class="request-information">
    <p>How Do I Get This Item?</p>
    <ul>
      <li>Use our <a href="https://library.nyu.edu/about/collections/search-collections/call-numbers/">call numbers and floor maps resource</a> for help locating material at the Bobst library. Use our <a href="https://library.nyu.edu/locations/?org_type%5B%5D=NYU&type%5B%5D=Library&type%5B%5D=Special+Collections+%26+Archives">library locations page</a> to locate materials at our other libraries.</li>
      <li>To place a request to pick up an item, receive a scan of a chapter, or place a request from partner libraries, use the request buttons above.</li>
    </ul></div>
</div>
`,
    } );

    // PRM-OPAC-BACK-BUTTON-AFTER
    app.component( 'prmOpacBackButtonAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmOpacBackButtonAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ORGANIZATION-OR-FACET-TOGGLE-AFTER
    app.component( 'prmOrganizationOrFacetToggleAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmOrganizationOrFacetToggleAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ORGANIZATIONS-AFTER
    app.component( 'prmOrganizationsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmOrganizationsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-ORGLIST-CATEGORIZE-AFTER
    app.component( 'prmOrglistCategorizeAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmOrglistCategorizeAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-PAGE-NAV-MENU-AFTER
    app.component( 'prmPageNavMenuAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmPageNavMenuAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-PAGING-BAR-AFTER
    app.component( 'prmPagingBarAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmPagingBarAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-PDF-VIEWER-AFTER
    app.component( 'prmPdfViewerAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmPdfViewerAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-PERFORMANCE-MONITOR-AFTER
    app.component( 'prmPerformanceMonitorAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmPerformanceMonitorAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-PERMALINK-AFTER
    app.component( 'prmPermalinkAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmPermalinkAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-PERSONAL-INFO-AFTER
    app.component( 'prmPersonalInfoAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmPersonalInfoAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-PERSONAL-SETTINGS-AFTER
    app.component( 'prmPersonalSettingsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmPersonalSettingsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-PERSONALIZATION-DIALOG-AFTER
    app.component( 'prmPersonalizationDialogAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmPersonalizationDialogAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-PERSONALIZE-RESULTS-BUTTON-AFTER
    app.component( 'prmPersonalizeResultsButtonAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmPersonalizeResultsButtonAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-PHYSICAL-DELIVERY-MORE-OPTION-ROW-AFTER
    app.component( 'prmPhysicalDeliveryMoreOptionRowAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmPhysicalDeliveryMoreOptionRowAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-PHYSICAL-DELIVERY-OPTIONS-AFTER
    app.component( 'prmPhysicalDeliveryOptionsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmPhysicalDeliveryOptionsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-PHYSICAL-DELIVERY-OPTIONS-TABLE-AFTER
    app.component( 'prmPhysicalDeliveryOptionsTableAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmPhysicalDeliveryOptionsTableAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-POPUP-MESSAGE-AFTER
    app.component( 'prmPopupMessageAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmPopupMessageAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-PRE-FILTERS-AFTER
    app.component( 'prmPreFiltersAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmPreFiltersAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-PRINT-ITEM-AFTER
    app.component( 'prmPrintItemAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmPrintItemAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-PROGRESS-BAR-AFTER
    app.component( 'prmProgressBarAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmProgressBarAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-PROGRESS-CHECKBOX-AFTER
    app.component( 'prmProgressCheckboxAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmProgressCheckboxAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-QR-CODE-AFTER
    app.component( 'prmQrCodeAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmQrCodeAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-QUICK-ACCESS-AFTER
    app.component( 'prmQuickAccessAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmQuickAccessAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-QUICK-LINK-AFTER
    app.component( 'prmQuickLinkAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmQuickLinkAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-RAPIDO-MESSAGE-BAR-AFTER
    app.component( 'prmRapidoMessageBarAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmRapidoMessageBarAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-RAPIDO-NO-OFFER-MESSAGE-AFTER
    app.component( 'prmRapidoNoOfferMessageAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmRapidoNoOfferMessageAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-RECOMENDATION-ITEM-AFTER
    app.component( 'prmRecomendationItemAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmRecomendationItemAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-RECOMENDATIONS-AFTER
    app.component( 'prmRecomendationsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmRecomendationsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-RECORD-COLLECTION-PATHS-AFTER
    app.component( 'prmRecordCollectionPathsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmRecordCollectionPathsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-REFERENCE-ENTRY-ITEM-AFTER
    app.component( 'prmReferenceEntryItemAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmReferenceEntryItemAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-REFWORKS-AFTER
    app.component( 'prmRefworksAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmRefworksAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-REPORT-PROBLEM-AFTER
    app.component( 'prmReportProblemAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmReportProblemAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-REQUEST-AFTER
    app.component( 'prmRequestAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmRequestAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-REQUEST-APPROVAL-AFTER
    app.component( 'prmRequestApprovalAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmRequestApprovalAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-REQUEST-SERVICES-AFTER
    app.component( 'prmRequestServicesAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmRequestServicesAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-REQUESTS-AFTER
    app.component( 'prmRequestsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmRequestsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-REQUESTS-OVERVIEW-AFTER
    app.component( 'prmRequestsOverviewAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmRequestsOverviewAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-REQUESTS-SERVICES-OVL-AFTER
    app.component( 'prmRequestsServicesOvlAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmRequestsServicesOvlAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-RESOURCE-RECOMMENDER-AFTER
    app.component( 'prmResourceRecommenderAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmResourceRecommenderAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-RESOURCE-RECOMMENDER-CARD-CONTENT-AFTER
    app.component( 'prmResourceRecommenderCardContentAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmResourceRecommenderCardContentAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-RESOURCE-RECOMMENDER-FULL-VIEW-AFTER
    app.component( 'prmResourceRecommenderFullViewAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmResourceRecommenderFullViewAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-RESOURCE-TYPE-FILTER-BAR-AFTER
    app.component( 'prmResourceTypeFilterBarAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmResourceTypeFilterBarAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-REVIEWS-RESULTS-LINE-AFTER
    app.component( 'prmReviewsResultsLineAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmReviewsResultsLineAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SAVE-TO-FAVORITES-BUTTON-AFTER
    app.component( 'prmSaveToFavoritesButtonAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSaveToFavoritesButtonAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : `<a href="https://nyu.qualtrics.com/jfe/form/SV_blQ3OFOew9vl6Pb?Source=NYUSH"
   class="prm-save-to-favorites-button-after-feedback"
   target="_blank"
   tabindex="-1">
    <button aria-label="Provide Feedback"
            class="button-with-icon zero-margin md-button md-small"
            type="button">
        <prm-icon style="z-index:1" icon-type="svg" svg-icon-set="communication"
                  icon-definition="ic_forum_24px"></prm-icon>
        <span class="search-bar-sub-menu-item hide-xs">Provide Feedback</span>
    </button>
</a>
`,
    } );

    // PRM-SAVED-QUERIES-AFTER
    app.component( 'prmSavedQueriesAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSavedQueriesAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SAVED-QUERIES-LIST-AFTER
    app.component( 'prmSavedQueriesListAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSavedQueriesListAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SAVED-QUERY-FILTER-AFTER
    app.component( 'prmSavedQueryFilterAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSavedQueryFilterAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SAVED-SEARCHES-GROUP-ACTIONS-AFTER
    app.component( 'prmSavedSearchesGroupActionsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSavedSearchesGroupActionsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SCROLL-AFTER
    app.component( 'prmScrollAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmScrollAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SEADRAGON-VIEWER-AFTER
    app.component( 'prmSeadragonViewerAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSeadragonViewerAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SEARCH-AFTER
    app.component( 'prmSearchAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSearchAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SEARCH-BAR-AFTER
    app.component( 'prmSearchBarAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSearchBarAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : `<search-bar-sub-menu>
    <div class="layout-align-end-center layout-row flex search-bar-sub-menu">
        <ul>
            <li>
                <a href="https://nyu.qualtrics.com/jfe/form/SV_blQ3OFOew9vl6Pb?Source=NYU" target="_blank"
                    tabindex="-1">
                    <button aria-label="Provide Feedback" class="button-with-icon zero-margin md-button md-small"
                        type="button">
                        <prm-icon style="z-index:1" icon-type="svg" svg-icon-set="communication"
                            icon-definition="ic_forum_24px"></prm-icon>
                        <span class="search-bar-sub-menu-item hide-xs">Provide Feedback</span>
                    </button>
                </a>
            </li>
            <li>
                <a href="https://guides.nyu.edu/library-hours" target="_blank" tabindex="-1">
                    <button aria-label="Library Hours" class="button-with-icon zero-margin md-button md-small"
                        type="button">
                        <prm-icon style="z-index:1" icon-type="svg" svg-icon-set="av"
                            icon-definition="ic_av_timer_24px"></prm-icon>
                        <span class="search-bar-sub-menu-item hide-xs">Library Hours</span>
                    </button>
                </a>
            </li>
        </ul>
    </div>
</search-bar-sub-menu>`,
    } );

    // PRM-SEARCH-BOOKMARK-FILTER-AFTER
    app.component( 'prmSearchBookmarkFilterAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSearchBookmarkFilterAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SEARCH-ERROR-MESSAGE-AFTER
    app.component( 'prmSearchErrorMessageAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSearchErrorMessageAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SEARCH-EXPLAIN-AFTER
    app.component( 'prmSearchExplainAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSearchExplainAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SEARCH-HISTORY-AFTER
    app.component( 'prmSearchHistoryAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSearchHistoryAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SEARCH-RESULT-ADD-TO-FAVORITES-MENU-AFTER
    app.component( 'prmSearchResultAddToFavoritesMenuAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSearchResultAddToFavoritesMenuAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SEARCH-RESULT-FRBR-LINE-AFTER
    app.component( 'prmSearchResultFrbrLineAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSearchResultFrbrLineAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SEARCH-RESULT-JOURNAL-INDICATION-LINE-AFTER
    app.component( 'prmSearchResultJournalIndicationLineAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSearchResultJournalIndicationLineAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SEARCH-RESULT-LIST-AFTER
    app.component( 'prmSearchResultListAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSearchResultListAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SEARCH-RESULT-SORT-BY-AFTER
    app.component( 'prmSearchResultSortByAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSearchResultSortByAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SEARCH-RESULT-THUMBNAIL-CONTAINER-AFTER
    app.component( 'prmSearchResultThumbnailContainerAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSearchResultThumbnailContainerAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SEARCH-RESULT-TITLE-AFTER
    app.component( 'prmSearchResultTitleAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSearchResultTitleAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SEARCH-RESULT-TOOL-BAR-AFTER
    app.component( 'prmSearchResultToolBarAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSearchResultToolBarAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SEARCH-WITHIN-JOURNAL-AFTER
    app.component( 'prmSearchWithinJournalAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSearchWithinJournalAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SEND-EMAIL-AFTER
    app.component( 'prmSendEmailAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSendEmailAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SERVICE-BUTTON-AFTER
    app.component( 'prmServiceButtonAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmServiceButtonAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SERVICE-DETAILS-AFTER
    app.component( 'prmServiceDetailsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmServiceDetailsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SERVICE-HEADER-AFTER
    app.component( 'prmServiceHeaderAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmServiceHeaderAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SERVICE-LINKS-AFTER
    app.component( 'prmServiceLinksAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmServiceLinksAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SERVICE-NGRS-AFTER
    app.component( 'prmServiceNgrsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmServiceNgrsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SERVICE-NO-OFFER-FOUND-AFTER
    app.component( 'prmServiceNoOfferFoundAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmServiceNoOfferFoundAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SERVICE-PHYSICAL-BEST-OFFER-AFTER
    app.component( 'prmServicePhysicalBestOfferAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmServicePhysicalBestOfferAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SERVICES-PAGE-AFTER
    app.component( 'prmServicesPageAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmServicesPageAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SHARE-AFTER
    app.component( 'prmShareAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmShareAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SIGN-IN-TO-VIEW-AFTER
    app.component( 'prmSignInToViewAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSignInToViewAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SILENT-LOGIN-AFTER
    app.component( 'prmSilentLoginAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSilentLoginAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SILENT-LOGIN-ALERT-TOAST-AFTER
    app.component( 'prmSilentLoginAlertToastAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSilentLoginAlertToastAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SKIP-TO-AFTER
    app.component( 'prmSkipToAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSkipToAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SLIDER-FIELD-AFTER
    app.component( 'prmSliderFieldAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSliderFieldAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SNIPPET-AFTER
    app.component( 'prmSnippetAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSnippetAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SOCIAL-MENU-AFTER
    app.component( 'prmSocialMenuAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSocialMenuAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SOURCE-RECORD-AFTER
    app.component( 'prmSourceRecordAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSourceRecordAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-STACK-MAP-AFTER
    app.component( 'prmStackMapAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmStackMapAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-STAND-ALONE-LOGIN-AFTER
    app.component( 'prmStandAloneLoginAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmStandAloneLoginAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-SYNDETIC-UNBOUND-AFTER
    app.component( 'prmSyndeticUnboundAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmSyndeticUnboundAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-TABS-AND-SCOPES-SELECTOR-AFTER
    app.component( 'prmTabsAndScopesSelectorAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmTabsAndScopesSelectorAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-TAGS-AFTER
    app.component( 'prmTagsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmTagsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-TAGS-LIST-AFTER
    app.component( 'prmTagsListAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmTagsListAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-TAGS-RESULTS-AFTER
    app.component( 'prmTagsResultsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmTagsResultsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-TAGS-SEARCH-BAR-AFTER
    app.component( 'prmTagsSearchBarAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmTagsSearchBarAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-THUMBNAIL-LIST-AFTER
    app.component( 'prmThumbnailListAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmThumbnailListAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-TIMEOUT-TOAST-AFTER
    app.component( 'prmTimeoutToastAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmTimeoutToastAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-TIMES-CITED-AFTER
    app.component( 'prmTimesCitedAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmTimesCitedAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-TOP-BAR-BEFORE
    app.component( 'prmTopBarBefore', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmTopBarBefore: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-TOP-NAV-BAR-LINKS-AFTER
    app.component( 'prmTopNavBarLinksAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmTopNavBarLinksAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-TOPBAR-AFTER
    app.component( 'prmTopbarAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmTopbarAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-TREE-NAV-AFTER
    app.component( 'prmTreeNavAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmTreeNavAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-UNION-CATALOG-LOGIN-AFTER
    app.component( 'prmUnionCatalogLoginAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmUnionCatalogLoginAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-UNION-CATALOG-LOGIN-INSTITUTION-ITEM-AFTER
    app.component( 'prmUnionCatalogLoginInstitutionItemAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmUnionCatalogLoginInstitutionItemAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-USAGE-METRICS-AFTER
    app.component( 'prmUsageMetricsAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmUsageMetricsAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-USER-AREA-AFTER
    app.component( 'prmUserAreaAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmUserAreaAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-USER-AREA-EXPANDABLE-AFTER
    app.component( 'prmUserAreaExpandableAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmUserAreaExpandableAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-USERNAME-PASSWORD-LOGIN-AFTER
    app.component( 'prmUsernamePasswordLoginAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmUsernamePasswordLoginAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-VIEW-ONLINE-AFTER
    app.component( 'prmViewOnlineAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmViewOnlineAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-VIRTUAL-BROWSE-AFTER
    app.component( 'prmVirtualBrowseAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmVirtualBrowseAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-VIRTUAL-BROWSE-ITEM-AFTER
    app.component( 'prmVirtualBrowseItemAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmVirtualBrowseItemAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-VIRTUAL-BROWSE-ITEM-INFO-AFTER
    app.component( 'prmVirtualBrowseItemInfoAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmVirtualBrowseItemInfoAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );

    // PRM-VOICE-SEARCH-TOAST-AFTER
    app.component( 'prmVoiceSearchToastAfter', {
        bindings   : { parentCtrl : '<' },
        controller : function ( $scope, $rootScope ) {
            const vm = this;
    
            vm.getPnx = () => {
                try {
                    return vm.parentCtrl.item.pnx;
                } catch ( err ) {
                    console.log( 'prmVoiceSearchToastAfter: error accessing `vm.parentCtrl.item.pnx`' );
    
                    return null;
                }
            };
    
            vm.rootScope = $rootScope;
            vm.scope = $scope;
        },
        template : ``,
    } );


}

generateAllPossibleCustomDirectives();
